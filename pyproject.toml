[build-system]
requires = ["setuptools>=61.0", "requests>=2.30.0", "aiohttp>=3.8.5", "asyncio"]
build-backend = "setuptools.build_meta"

[project]
name = "comlink_python"
dynamic = ["version"]
authors = [
    { name = "Mar Trepodi", email = "martrepodi@gmail.com" },
]
description = "Python 3 interface library for swgoh-comlink (https://github.com/swgoh-utils/swgoh-comlink)"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests"
]

[project.urls]
"Homepage" = "https://github.com/swgoh-utils/comlink-python"
"Bug Tracker" = "https://github.com/swgoh-utils/comlink-python/issues"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]

[tool.setuptools]
packages = ["swgoh_comlink"]

[tool.setuptools.dynamic]
version = { attr = "swgoh_comlink.__version__" }

[tool.semantic_release]
version_pattern = "swgoh_comlink/__init__.py:__version__ = '{version}'"      # source location of version string
version_source = "commit"                                                    # Set version source to "commit" so that
branch = "main"                                                              # branch to make releases of
build_command = "python3 -m build"                                           # build dists
dist_path = "dist/"                                                          # where to put dists
upload_to_release = true                                                     # auto-create GitHub release
upload_to_pypi = false                                                       # don't auto-upload to PyPI
remove_dist = false                                                          # don't remove dists
patch_without_tag = true                                                     # patch release by default

### Auto-generated below
# [tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|development)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

